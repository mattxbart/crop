---
- hosts: webservers
  vars:
    domain: localhost
    apache_http_port: 81
    nginx_http_port: 80
    max_clients: 200
    virtualenv_dir: "/srv/django/{{ domain }}"
    application_dir: "{{ virtualenv_dir }}/crop"
    django_project_name: prj
    django_project_home: "{{ virtualenv_dir }}/{{ django_project_name }}"
    django_settings_module: "{{ django_project_name }}.settings"
    postgres_db: "wegisyoung"
    postgres_host: "localhost"
    postgres_user: "django"
    postgres_password: "ceec4eif7ya"

  remote_user: ubuntu
  sudo: yes
  tasks:


  - name: ensure apache is at the latest version
    apt: pkg=apache2 state=latest
  - name: install libapache2-mod-wsgi
    apt: pkg=libapache2-mod-wsgi state=latest
  - name: ensure python-dev is latest version
    apt: name=python-dev update_cache=yes state=latest
  - name: ensure git is latest version
    apt: name=git update_cache=yes state=latest
  - name: ensure postgres any psycopg2 is latest version
    apt: name=postgresql update_cache=yes state=latest
    apt: name=postgresql-server-dev-9.3 update_cache=yes state=latest
    apt: name=python-psycopg2 update_cache=yes state=latest
  - name: create user deploy
    user: name=deploy group=www-data shell=/bin/bash 

  - name: apache2 listen on port 81
    template: src=roles/webtier/templates/apache_port.j2 dest=/etc/apache2/ports.conf

  - name: write the apache config file
    template: src=roles/webtier/templates/apache.j2 dest=/etc/apache2/sites-enabled/{{ domain }}.conf

  - name: write the apache servername
    template: src=roles/webtier/templates/apache_servername.j2 dest=/etc/apache2/conf-enabled/servername.conf
    notify:
    - restart apache2

  - name: ensure nginx is at the latest version
    apt: pkg=nginx state=latest

  - name: remove default nginx conf
    file: path=/etc/nginx/sites-enabled/default state=absent 

  - name: write nginx config file
    template: src=roles/webtier/templates/nginx.j2 dest=/etc/nginx/sites-enabled/{{ domain }}.conf
    notify:
    - restart nginx

  - name: ensure nginx is running (and enable it at boot)
    service: name=nginx state=started enabled=yes

  - name: create virtualenv directory
    file: path={{ virtualenv_dir }} owner=deploy group=www-data state=directory

  - name: create django project directory
    file: path={{ django_project_home }} owner=deploy group=www-data state=directory

  - name: create virtualenv
    shell: virtualenv {{ virtualenv_dir }}
    sudo_user: deploy

  - name: git checkout
    git: repo=https://github.com/mattxbart/crop.git
         dest={{ application_dir }}
    sudo_user: deploy
    tags:
      - update
    notify:
      - restart apache2

  - name: install web application dependencies
    pip: requirements={{ application_dir }}/requirements.txt
         virtualenv={{virtualenv_dir}}
    sudo_user: deploy
    tags:
      - update

  - name: check if django project already exists
    stat: path={{ django_project_home }}
    register: django_project_dir

  - name: setup django project
    shell: "{{ virtualenv_dir }}/bin/django-admin startproject {{ django_project_name }} {{ django_project_home }}"
    sudo_user: deploy
    when: django_project_dir.stat.isdir is not defined

  - name: setup django settings
    template: src=roles/webtier/templates/local_settings.j2 dest="{{ django_project_home }}/prj/local_settings.py"
    sudo_user: deploy
    tags:
      - update
    notify:
      - restart apache2

  - name: update django to use local settings
    lineinfile:
      dest="{{ django_project_home }}/prj/settings.py"
      line="from .local_settings import *"
      state=present
      insertafter=EOF
      create=True
    notify:
    - restart apache2

  - name: Django collectstatic
    django_manage: command=collectstatic 
      virtualenv={{ virtualenv_dir }}
      app_path={{ django_project_home }}
    tags:
      - update

  - name: create postgres db
    postgresql_db: name={{ postgres_db }}
                   encoding='UTF-8'
                   template='template0'
    sudo_user: postgres

  - name: create postgres user
    postgresql_user: db={{ postgres_db }} name={{ postgres_user }} password={{ postgres_password }} priv=ALL
    sudo_user: postgres

  - name: Django syncdb
    django_manage: command=syncdb
      virtualenv={{ virtualenv_dir }}
      app_path={{ django_project_home }}
      settings={{ django_settings_module }}

  - name: Django migrate
    django_manage: command=migrate
      virtualenv={{ virtualenv_dir }}
      app_path={{ django_project_home }}
      settings={{ django_settings_module }}
    tags:
      - update
    notify:
      - restart apache2


  handlers:
    - name: restart apache2
      service: name=apache2 state=restarted
    - name: restart nginx
      service: name=nginx state=restarted